name: RA6M3-HMI-BOARD

on:
  # Runs at 16:00 UTC (BeiJing 00:00) on the 1st of every month
  schedule:
    - cron:  '0 16 1 * *'
  push:
    branches:
      - main
    paths-ignore:
      - documenation/**
      - '**/README.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - documenation/**
      - '**/README.md'
env:
  RTT_TOOL_CHAIN: "sourcery-arm"

jobs:
  check:
    runs-on: ubuntu-latest
    name: check-yaml-format
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: 3.8

      - name: Check yaml
        if: ${{ success() }}
        shell: bash
        run: |
          pip install rt-thread-studio
          python -c "from rt_thread_studio import bsp_checker;bsp_path = '.';checker = bsp_checker.BspChecker(bsp_path);checker.check();"

  compile:
    needs: [check]
    runs-on: ubuntu-latest
    name: ${{ matrix.legs.RTT_BSP }}
    strategy:
      fail-fast: false
      matrix:
       legs:
         - {RTT_BSP: "project_0"}
         - {RTT_BSP: "hmi-board-ebike"}
         - {RTT_BSP: "hmi-board-lvgl"}
         - {RTT_BSP: "hmi-board-video"}
         - {RTT_BSP: "hmi-board-ota-app"}
         - {RTT_BSP: "hmi-board-ota-boot"}
         - {RTT_BSP: "hmi-board-soem"}
         - {RTT_BSP: "hmi-board-factory"}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: 3.8

      - name: Install Arm ToolChains
        if: ${{ success() }}
        shell: bash
        run: |
          wget -c https://github.com/RT-Thread/toolchains-ci/releases/download/v1.8/arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz
          sudo tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz -C /opt
          /opt/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin/arm-none-eabi-gcc --version
          echo "RTT_EXEC_PATH=/opt/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin" >> $GITHUB_ENV

      - name: Install Tools
        if: ${{ success() }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get -qq install gcc-multilib libsdl2-dev scons
          echo "RTT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV
          echo "RTT_CC=gcc" >> $GITHUB_ENV

      - name: Compile ${{ matrix.legs.RTT_BSP }}
        if: ${{ success() }}
        shell: bash
        env:
          RTT_BSP: ${{ matrix.legs.RTT_BSP }}
        run: |
          cd projects
          scons -C $RTT_BSP